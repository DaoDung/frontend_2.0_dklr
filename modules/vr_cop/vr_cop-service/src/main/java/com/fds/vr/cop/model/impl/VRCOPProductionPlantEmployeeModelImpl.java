/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.cop.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.cop.model.VRCOPProductionPlantEmployee;
import com.fds.vr.cop.model.VRCOPProductionPlantEmployeeModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRCOPProductionPlantEmployee service. Represents a row in the &quot;vr_copproductionplantemployee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRCOPProductionPlantEmployeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRCOPProductionPlantEmployeeImpl}.
 * </p>
 *
 * @author HoangLeTrongNhan
 * @see VRCOPProductionPlantEmployeeImpl
 * @see VRCOPProductionPlantEmployee
 * @see VRCOPProductionPlantEmployeeModel
 * @generated
 */
@ProviderType
public class VRCOPProductionPlantEmployeeModelImpl extends BaseModelImpl<VRCOPProductionPlantEmployee>
	implements VRCOPProductionPlantEmployeeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vrcop production plant employee model instance should use the {@link VRCOPProductionPlantEmployee} interface instead.
	 */
	public static final String TABLE_NAME = "vr_copproductionplantemployee";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "mtCore", Types.INTEGER },
			{ "employeeName", Types.VARCHAR },
			{ "employeeCertificateNo", Types.VARCHAR },
			{ "COPReportRepositoryID", Types.BIGINT },
			{ "COPReportNo", Types.VARCHAR },
			{ "sequenceNo", Types.BIGINT },
			{ "trainningAt", Types.VARCHAR },
			{ "modifyDate", Types.TIMESTAMP },
			{ "syncDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mtCore", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("employeeName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employeeCertificateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COPReportRepositoryID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("COPReportNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("sequenceNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("trainningAt", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("syncDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table vr_copproductionplantemployee (id LONG not null primary key,mtCore INTEGER,employeeName VARCHAR(75) null,employeeCertificateNo VARCHAR(75) null,COPReportRepositoryID LONG,COPReportNo VARCHAR(75) null,sequenceNo LONG,trainningAt VARCHAR(75) null,modifyDate DATE null,syncDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vr_copproductionplantemployee";
	public static final String ORDER_BY_JPQL = " ORDER BY vrcopProductionPlantEmployee.id DESC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_copproductionplantemployee.id DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.cop.vr.cop.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.cop.model.VRCOPProductionPlantEmployee"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.cop.vr.cop.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.cop.model.VRCOPProductionPlantEmployee"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.cop.vr.cop.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.cop.model.VRCOPProductionPlantEmployee"),
			true);
	public static final long COPREPORTNO_COLUMN_BITMASK = 1L;
	public static final long ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.cop.vr.cop.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.cop.model.VRCOPProductionPlantEmployee"));

	public VRCOPProductionPlantEmployeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRCOPProductionPlantEmployee.class;
	}

	@Override
	public String getModelClassName() {
		return VRCOPProductionPlantEmployee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("mtCore", getMtCore());
		attributes.put("employeeName", getEmployeeName());
		attributes.put("employeeCertificateNo", getEmployeeCertificateNo());
		attributes.put("COPReportRepositoryID", getCOPReportRepositoryID());
		attributes.put("COPReportNo", getCOPReportNo());
		attributes.put("sequenceNo", getSequenceNo());
		attributes.put("trainningAt", getTrainningAt());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("syncDate", getSyncDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Integer mtCore = (Integer)attributes.get("mtCore");

		if (mtCore != null) {
			setMtCore(mtCore);
		}

		String employeeName = (String)attributes.get("employeeName");

		if (employeeName != null) {
			setEmployeeName(employeeName);
		}

		String employeeCertificateNo = (String)attributes.get(
				"employeeCertificateNo");

		if (employeeCertificateNo != null) {
			setEmployeeCertificateNo(employeeCertificateNo);
		}

		Long COPReportRepositoryID = (Long)attributes.get(
				"COPReportRepositoryID");

		if (COPReportRepositoryID != null) {
			setCOPReportRepositoryID(COPReportRepositoryID);
		}

		String COPReportNo = (String)attributes.get("COPReportNo");

		if (COPReportNo != null) {
			setCOPReportNo(COPReportNo);
		}

		Long sequenceNo = (Long)attributes.get("sequenceNo");

		if (sequenceNo != null) {
			setSequenceNo(sequenceNo);
		}

		String trainningAt = (String)attributes.get("trainningAt");

		if (trainningAt != null) {
			setTrainningAt(trainningAt);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Date syncDate = (Date)attributes.get("syncDate");

		if (syncDate != null) {
			setSyncDate(syncDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public int getMtCore() {
		return _mtCore;
	}

	@Override
	public void setMtCore(int mtCore) {
		_mtCore = mtCore;
	}

	@Override
	public String getEmployeeName() {
		if (_employeeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeName;
		}
	}

	@Override
	public void setEmployeeName(String employeeName) {
		_employeeName = employeeName;
	}

	@Override
	public String getEmployeeCertificateNo() {
		if (_employeeCertificateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _employeeCertificateNo;
		}
	}

	@Override
	public void setEmployeeCertificateNo(String employeeCertificateNo) {
		_employeeCertificateNo = employeeCertificateNo;
	}

	@Override
	public long getCOPReportRepositoryID() {
		return _COPReportRepositoryID;
	}

	@Override
	public void setCOPReportRepositoryID(long COPReportRepositoryID) {
		_COPReportRepositoryID = COPReportRepositoryID;
	}

	@Override
	public String getCOPReportNo() {
		if (_COPReportNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _COPReportNo;
		}
	}

	@Override
	public void setCOPReportNo(String COPReportNo) {
		_columnBitmask |= COPREPORTNO_COLUMN_BITMASK;

		if (_originalCOPReportNo == null) {
			_originalCOPReportNo = _COPReportNo;
		}

		_COPReportNo = COPReportNo;
	}

	public String getOriginalCOPReportNo() {
		return GetterUtil.getString(_originalCOPReportNo);
	}

	@Override
	public long getSequenceNo() {
		return _sequenceNo;
	}

	@Override
	public void setSequenceNo(long sequenceNo) {
		_sequenceNo = sequenceNo;
	}

	@Override
	public String getTrainningAt() {
		if (_trainningAt == null) {
			return StringPool.BLANK;
		}
		else {
			return _trainningAt;
		}
	}

	@Override
	public void setTrainningAt(String trainningAt) {
		_trainningAt = trainningAt;
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public Date getSyncDate() {
		return _syncDate;
	}

	@Override
	public void setSyncDate(Date syncDate) {
		_syncDate = syncDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VRCOPProductionPlantEmployee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRCOPProductionPlantEmployee toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRCOPProductionPlantEmployee)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRCOPProductionPlantEmployeeImpl vrcopProductionPlantEmployeeImpl = new VRCOPProductionPlantEmployeeImpl();

		vrcopProductionPlantEmployeeImpl.setId(getId());
		vrcopProductionPlantEmployeeImpl.setMtCore(getMtCore());
		vrcopProductionPlantEmployeeImpl.setEmployeeName(getEmployeeName());
		vrcopProductionPlantEmployeeImpl.setEmployeeCertificateNo(getEmployeeCertificateNo());
		vrcopProductionPlantEmployeeImpl.setCOPReportRepositoryID(getCOPReportRepositoryID());
		vrcopProductionPlantEmployeeImpl.setCOPReportNo(getCOPReportNo());
		vrcopProductionPlantEmployeeImpl.setSequenceNo(getSequenceNo());
		vrcopProductionPlantEmployeeImpl.setTrainningAt(getTrainningAt());
		vrcopProductionPlantEmployeeImpl.setModifyDate(getModifyDate());
		vrcopProductionPlantEmployeeImpl.setSyncDate(getSyncDate());

		vrcopProductionPlantEmployeeImpl.resetOriginalValues();

		return vrcopProductionPlantEmployeeImpl;
	}

	@Override
	public int compareTo(
		VRCOPProductionPlantEmployee vrcopProductionPlantEmployee) {
		int value = 0;

		if (getId() < vrcopProductionPlantEmployee.getId()) {
			value = -1;
		}
		else if (getId() > vrcopProductionPlantEmployee.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRCOPProductionPlantEmployee)) {
			return false;
		}

		VRCOPProductionPlantEmployee vrcopProductionPlantEmployee = (VRCOPProductionPlantEmployee)obj;

		long primaryKey = vrcopProductionPlantEmployee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRCOPProductionPlantEmployeeModelImpl vrcopProductionPlantEmployeeModelImpl =
			this;

		vrcopProductionPlantEmployeeModelImpl._originalCOPReportNo = vrcopProductionPlantEmployeeModelImpl._COPReportNo;

		vrcopProductionPlantEmployeeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRCOPProductionPlantEmployee> toCacheModel() {
		VRCOPProductionPlantEmployeeCacheModel vrcopProductionPlantEmployeeCacheModel =
			new VRCOPProductionPlantEmployeeCacheModel();

		vrcopProductionPlantEmployeeCacheModel.id = getId();

		vrcopProductionPlantEmployeeCacheModel.mtCore = getMtCore();

		vrcopProductionPlantEmployeeCacheModel.employeeName = getEmployeeName();

		String employeeName = vrcopProductionPlantEmployeeCacheModel.employeeName;

		if ((employeeName != null) && (employeeName.length() == 0)) {
			vrcopProductionPlantEmployeeCacheModel.employeeName = null;
		}

		vrcopProductionPlantEmployeeCacheModel.employeeCertificateNo = getEmployeeCertificateNo();

		String employeeCertificateNo = vrcopProductionPlantEmployeeCacheModel.employeeCertificateNo;

		if ((employeeCertificateNo != null) &&
				(employeeCertificateNo.length() == 0)) {
			vrcopProductionPlantEmployeeCacheModel.employeeCertificateNo = null;
		}

		vrcopProductionPlantEmployeeCacheModel.COPReportRepositoryID = getCOPReportRepositoryID();

		vrcopProductionPlantEmployeeCacheModel.COPReportNo = getCOPReportNo();

		String COPReportNo = vrcopProductionPlantEmployeeCacheModel.COPReportNo;

		if ((COPReportNo != null) && (COPReportNo.length() == 0)) {
			vrcopProductionPlantEmployeeCacheModel.COPReportNo = null;
		}

		vrcopProductionPlantEmployeeCacheModel.sequenceNo = getSequenceNo();

		vrcopProductionPlantEmployeeCacheModel.trainningAt = getTrainningAt();

		String trainningAt = vrcopProductionPlantEmployeeCacheModel.trainningAt;

		if ((trainningAt != null) && (trainningAt.length() == 0)) {
			vrcopProductionPlantEmployeeCacheModel.trainningAt = null;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			vrcopProductionPlantEmployeeCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			vrcopProductionPlantEmployeeCacheModel.modifyDate = Long.MIN_VALUE;
		}

		Date syncDate = getSyncDate();

		if (syncDate != null) {
			vrcopProductionPlantEmployeeCacheModel.syncDate = syncDate.getTime();
		}
		else {
			vrcopProductionPlantEmployeeCacheModel.syncDate = Long.MIN_VALUE;
		}

		return vrcopProductionPlantEmployeeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", mtCore=");
		sb.append(getMtCore());
		sb.append(", employeeName=");
		sb.append(getEmployeeName());
		sb.append(", employeeCertificateNo=");
		sb.append(getEmployeeCertificateNo());
		sb.append(", COPReportRepositoryID=");
		sb.append(getCOPReportRepositoryID());
		sb.append(", COPReportNo=");
		sb.append(getCOPReportNo());
		sb.append(", sequenceNo=");
		sb.append(getSequenceNo());
		sb.append(", trainningAt=");
		sb.append(getTrainningAt());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", syncDate=");
		sb.append(getSyncDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.cop.model.VRCOPProductionPlantEmployee");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mtCore</column-name><column-value><![CDATA[");
		sb.append(getMtCore());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeName</column-name><column-value><![CDATA[");
		sb.append(getEmployeeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeCertificateNo</column-name><column-value><![CDATA[");
		sb.append(getEmployeeCertificateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>COPReportRepositoryID</column-name><column-value><![CDATA[");
		sb.append(getCOPReportRepositoryID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>COPReportNo</column-name><column-value><![CDATA[");
		sb.append(getCOPReportNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceNo</column-name><column-value><![CDATA[");
		sb.append(getSequenceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trainningAt</column-name><column-value><![CDATA[");
		sb.append(getTrainningAt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncDate</column-name><column-value><![CDATA[");
		sb.append(getSyncDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRCOPProductionPlantEmployee.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRCOPProductionPlantEmployee.class
		};
	private long _id;
	private int _mtCore;
	private String _employeeName;
	private String _employeeCertificateNo;
	private long _COPReportRepositoryID;
	private String _COPReportNo;
	private String _originalCOPReportNo;
	private long _sequenceNo;
	private String _trainningAt;
	private Date _modifyDate;
	private Date _syncDate;
	private long _columnBitmask;
	private VRCOPProductionPlantEmployee _escapedModel;
}